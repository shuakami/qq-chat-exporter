!function(){"use strict";const e={styles:{info:"color: #3498db; font-weight: normal;",success:"color: #2ecc71; font-weight: bold;",warning:"color: #f39c12; font-weight: bold;",error:"color: #e74c3c; font-weight: bold;",highlight:"color: #9b59b6; font-weight: bold;",system:"color: #7f8c8d; font-style: italic;",event:"color: #1abc9c; font-weight: normal;",count:"color: #f1c40f; font-weight: bold;"},info:(n,...t)=>console.log(`%c[INFO] ${n}`,e.styles.info,...t),success:(n,...t)=>console.log(`%c[SUCCESS] ${n}`,e.styles.success,...t),warning:(n,...t)=>console.log(`%c[WARNING] ${n}`,e.styles.warning,...t),error:(n,...t)=>console.error(`%c[ERROR] ${n}`,e.styles.error,...t),highlight:(n,...t)=>console.log(`%c[IMPORTANT] ${n}`,e.styles.highlight,...t),system:(n,...t)=>console.log(`%c[SYSTEM] ${n}`,e.styles.system,...t),event:(n,...t)=>console.log(`%c[EVENT] ${n}`,e.styles.event,...t),count:(n,...t)=>console.log(`%c[COUNT] ${n}`,e.styles.count,...t),startSection:e=>{console.log(`\n%c========== ${e} ==========`,"color: #3498db; background: #f8f9fa; font-size: 14px; font-weight: bold; padding: 4px 8px; border-radius: 4px;")},endSection:e=>{console.log(`%c========== ${e} 结束 ==========\n`,"color: #7f8c8d; background: #f8f9fa; font-size: 12px; padding: 2px 8px; border-radius: 4px;")},divider:()=>console.log("%c----------------------------------------","color: #bdc3c7;")},n=e=>new Promise((n=>setTimeout(n,e)));async function t(e,n,t,o){const r=e.clientHeight;switch(t){case 0:e.focus(),function(e,n){document.activeElement.blur(),e.focus();const t="PageUp"===n?33:34,o=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,key:n,code:"PageUp"===n?"PageUp":"PageDown",keyCode:t,which:t,composed:!0,view:window});try{Object.defineProperties(o,{keyCode:{value:t},which:{value:t},key:{value:n}})}catch(e){}e.dispatchEvent(o),setTimeout((()=>{const o=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,key:n,code:"PageUp"===n?"PageUp":"PageDown",keyCode:t,which:t,composed:!0,view:window});try{Object.defineProperties(o,{keyCode:{value:t},which:{value:t},key:{value:n}})}catch(e){}e.dispatchEvent(o)}),100)}(e,"up"===n?"PageUp":"PageDown");break;case 1:e.focus(),function(e,n,t){const o="PageUp"===n?33:34;e.focus();const r=new InputEvent("beforeinput",{bubbles:!0,cancelable:!0,inputType:"insertText",data:n});e.dispatchEvent(r);const i=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,key:n,code:"PageUp"===n?"PageUp":"PageDown",keyCode:o,which:o});e.dispatchEvent(i);let s=0;const a=t,c=setInterval((()=>{if(s+=100,s>=a){clearInterval(c);const t=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,key:n,code:"PageUp"===n?"PageUp":"PageDown",keyCode:o,which:o});e.dispatchEvent(t);const r=new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:n});e.dispatchEvent(r)}}),100)}(e,"up"===n?"PageUp":"PageDown",o);break;case 2:"function"==typeof e.scroll?"up"===n?e.scroll(0,e.scrollTop-r):e.scroll(0,e.scrollTop+.3*r):"up"===n?e.scrollTop-=r:e.scrollTop+=.3*r;break;case 3:!function(e,n,t){const o=t,r=Math.floor(o/50),i=n/r;let s=0;const a=setInterval((()=>{if(s>=r)return void clearInterval(a);const n=new WheelEvent("wheel",{bubbles:!0,cancelable:!0,deltaY:i,deltaMode:0});e.dispatchEvent(n),s++}),50)}(e,"up"===n?-r:.3*r,o);break;case 4:e.scrollTo({top:"up"===n?e.scrollTop-r:e.scrollTop+.3*r,behavior:"smooth"})}e.dispatchEvent(new Event("scroll",{bubbles:!0}))}async function o(n,t,o="json",r="asc"){"string"!=typeof o&&(o="json",e.warning("未指定正确的格式参数，已默认使用JSON格式")),"json"!==(o=o.toLowerCase().trim())&&"txt"!==o&&(o="json",e.warning('格式参数只支持"json"或"txt"，已默认使用JSON格式')),"string"!=typeof r?(r="asc",e.warning("未指定正确的排序参数，已默认使用时间正序")):"asc"!==(r=r.toLowerCase().trim())&&"desc"!==r&&(r="asc",e.warning('排序参数只支持"asc"或"desc"，已默认使用时间正序')),e.highlight(`开始导出聊天记录 [${o.toUpperCase()}格式, ${"asc"===r?"时间正序":"时间倒序"}]`);const i=new Blob(['\n  onmessage = function(e) {\n    const {records, format, sortOrder} = e.data;\n    \n    // 根据排序参数对记录进行排序\n    records.sort((a, b) => {\n      if (sortOrder === \'asc\') {\n        return a.id - b.id; // 正序：ID小的在前(较早的消息)\n      } else {\n        return b.id - a.id; // 倒序：ID大的在前(较新的消息)\n      }\n    });\n    \n    let result = "";\n    if(format === \'json\'){\n      result = JSON.stringify(records, null, 2);\n    } else if(format === \'txt\'){\n      result = records.map(rec => rec.id + "\\t" + rec.time + "\\t" + rec.sender + "\\t" + rec.content).join("\\n");\n    }\n    postMessage(result);\n  };\n'],{type:"application/javascript"}),s=new Worker(URL.createObjectURL(i));return new Promise(((i,a)=>{s.onmessage=function(n){const t=n.data;e.success(`导出完成 (${o.toUpperCase()}格式)`);const s=(new Date).toISOString().slice(0,10),a=document.createElement("a"),c=new Blob([t],{type:"text/plain;charset=utf-8"});a.href=URL.createObjectURL(c),a.download=`chat_records_${s}_${r}.${o}`,a.click(),e.info(`文件 chat_records_${s}_${r}.${o} 已保存到下载文件夹`),i()},n.records.where("session").equals(t).toArray().then((n=>{if(0===n.length)return e.error("没有找到可导出的聊天记录！请确保已正确获取聊天内容"),void a(new Error("没有找到可导出的聊天记录"));e.system(`正在处理 ${n.length} 条记录...`),s.postMessage({records:n,format:o,sortOrder:r})})).catch((n=>{e.error(`读取数据库失败: ${n.message}`),e.warning("如果您刚刚运行了脚本，请等待自动滚动完成后再导出"),a(n)}))}))}async function r(n,t,o="asc"){o="string"==typeof o&&"desc"===o.toLowerCase()?"desc":"asc",e.highlight(`正在获取聊天记录预览 (${"asc"===o?"时间正序":"时间倒序"})`);try{const r=await n.records.where("session").equals(t).toArray();if(0===r.length)return void e.error("没有找到可预览的聊天记录！");r.sort(((e,n)=>"asc"===o?e.id-n.id:n.id-e.id)),console.table(r.slice(0,20).map((e=>({id:e.id,time:e.time,sender:e.sender,content:e.content.length>50?e.content.substring(0,50)+"...":e.content})))),e.success(`共有 ${r.length} 条记录，上表显示前20条`),e.system("当前排序: "+("asc"===o?"时间正序 (ID小→大，较早→较新)":"时间倒序 (ID大→小，较新→较早)"))}catch(n){e.error(`预览失败: ${n.message}`)}}function i(){e.highlight("【导出方法】请使用以下方式导出聊天记录:"),e.info("1. 点击页面右下角的导出按钮"),e.info("2. 或在控制台输入以下命令:"),e.system('   - JSON格式(时间正序): exportChatRecords("json", "asc")'),e.system('   - JSON格式(时间倒序): exportChatRecords("json", "desc")'),e.system('   - TXT格式(时间正序): exportChatRecords("txt", "asc")'),e.system('   - TXT格式(时间倒序): exportChatRecords("txt", "desc")'),e.divider(),e.info("排序说明:"),e.system("- 时间正序(asc): 从早到晚，旧消息在前，新消息在后"),e.system("- 时间倒序(desc): 从晚到早，较新的消息在前，较早的消息在后")}function s(n,t,i){const s=document.createElement("style");s.textContent="\n    @keyframes slideIn {\n      from {\n        opacity: 0;\n        transform: translateY(20px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n\n    .chat-exporter {\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 320px;\n      background: rgba(255, 255, 255, 0.95);\n      border-radius: 16px;\n      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n      z-index: 9999;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      overflow: hidden;\n      border: 1px solid rgba(0, 0, 0, 0.04);\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      display: none;\n    }\n    \n    .chat-exporter.visible {\n      display: block;\n    }\n    \n    .chat-exporter:hover {\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n    }\n    \n    .chat-exporter-header {\n      padding: 16px 20px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n    }\n    \n    .chat-exporter-title-group {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n  \n    \n    .chat-exporter-title {\n      margin: 0;\n      font-size: 15px;\n      font-weight: 600;\n      color: #000;\n    }\n    \n    .chat-exporter-close {\n      padding: 8px;\n      margin: -8px;\n      cursor: pointer;\n      opacity: 0.6;\n      transition: all 0.2s;\n      border: none;\n      background: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 8px;\n    }\n    \n    .chat-exporter-close:hover {\n      opacity: 1;\n      background: rgba(0, 0, 0, 0.05);\n    }\n    \n    .chat-exporter-body {\n      padding: 20px;\n    }\n    \n    .chat-exporter-section-title {\n      font-size: 13px;\n      font-weight: 500;\n      color: #666;\n      margin: 0 0 12px 0;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    .chat-exporter-options {\n      background: rgba(0, 0, 0, 0.02);\n      padding: 12px 16px;\n      border-radius: 12px;\n      margin-bottom: 20px;\n      border: 1px solid rgba(0, 0, 0, 0.04);\n    }\n    \n    .chat-exporter-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 0;\n    }\n    \n    .chat-exporter-option:not(:last-child) {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.04);\n    }\n    \n    .chat-exporter-option input[type=\"radio\"] {\n      margin: 0;\n      width: 16px;\n      height: 16px;\n      margin-right: 12px;\n      accent-color: #1e90ff;\n    }\n    \n    .chat-exporter-option label {\n      font-size: 14px;\n      color: #333;\n      cursor: pointer;\n      user-select: none;\n    }\n    \n    .chat-exporter-buttons {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 8px;\n    }\n    \n    .chat-exporter-btn {\n      padding: 10px;\n      border: none;\n      border-radius: 10px;\n      font-size: 13px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.03);\n      color: #333;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 6px;\n    }\n    \n    .chat-exporter-btn:hover {\n      background: rgba(0, 0, 0, 0.06);\n    }\n    \n    .chat-exporter-btn.primary {\n      background: #1e90ff;\n      color: white;\n    }\n    \n    .chat-exporter-btn.primary:hover {\n      background: #1a7ee6;\n    }\n    \n    .chat-exporter-btn svg {\n      width: 14px;\n      height: 14px;\n      opacity: 0.8;\n    }\n    \n    .chat-exporter-footer {\n      padding: 12px 20px;\n      font-size: 12px;\n      color: #666;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.02);\n      border-top: 1px solid rgba(0, 0, 0, 0.04);\n    }\n    \n    .tooltip {\n      position: relative;\n    }\n    \n    .tooltip .tooltiptext {\n      visibility: hidden;\n      width: 200px;\n      background: rgba(0, 0, 0, 0.8);\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n      color: white;\n      text-align: center;\n      border-radius: 8px;\n      padding: 8px 12px;\n      position: absolute;\n      z-index: 1;\n      bottom: 125%;\n      left: 50%;\n      margin-left: -100px;\n      opacity: 0;\n      transition: all 0.2s;\n      font-size: 12px;\n      font-weight: normal;\n      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.16);\n      pointer-events: none;\n    }\n    \n    .tooltip:hover .tooltiptext {\n      visibility: visible;\n      opacity: 1;\n      transform: translateY(-4px);\n    }\n    \n    .restore-btn {\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 40px;\n      height: 40px;\n      background: #1e90ff;\n      border-radius: 10px;\n      color: white;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      box-shadow: 0 4px 12px rgba(30, 144, 255, 0.2);\n      z-index: 9999;\n      border: none;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    }\n    \n    .restore-btn:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 8px 24px rgba(30, 144, 255, 0.25);\n    }\n\n    .chat-exporter-loading {\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      background: rgba(255, 255, 255, 0.95);\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border-radius: 12px;\n      padding: 12px 20px;\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n      border: 1px solid rgba(0, 0, 0, 0.04);\n      animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 9999;\n    }\n\n    .chat-exporter-loading-spinner {\n      width: 16px;\n      height: 16px;\n      border: 2px solid #1e90ff;\n      border-top-color: transparent;\n      border-radius: 50%;\n      animation: spin 0.8s linear infinite;\n    }\n\n    .chat-exporter-loading-text {\n      font-size: 14px;\n      color: #333;\n    }\n\n    @keyframes spin {\n      to { transform: rotate(360deg); }\n    }\n  ",document.head.appendChild(s);const a=document.createElement("div");a.className="chat-exporter-loading",a.innerHTML='\n    <div class="chat-exporter-loading-spinner"></div>\n    <span class="chat-exporter-loading-text">正在准备导出工具...</span>\n  ',document.body.appendChild(a);const c=document.createElement("div");c.className="chat-exporter",c.innerHTML=`\n    <div class="chat-exporter-header">\n      <div class="chat-exporter-title-group">\n        <h3 class="chat-exporter-title">导出选项</h3>\n      </div>\n      <button class="chat-exporter-close">\n        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <path d="M18 6L6 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n          <path d="M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n        </svg>\n      </button>\n    </div>\n    <div class="chat-exporter-body">\n      <div class="chat-exporter-buttons">\n        <button class="chat-exporter-btn" id="preview-btn">\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M12 4H6C4.89543 4 4 4.89543 4 6V18C4 19.1046 4.89543 20 6 20H18C19.1046 20 20 19.1046 20 18V12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M11 13L20 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M15 4H20V9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n          </svg>\n          预览\n        </button>\n        <button class="chat-exporter-btn" id="export-json-btn">\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M12 15V3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M7 8L12 3L17 8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M20 21H4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n          </svg>\n          JSON\n        </button>\n        <button class="chat-exporter-btn" id="export-txt-btn">\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M12 15V3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M7 8L12 3L17 8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M20 21H4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n          </svg>\n          TXT\n        </button>\n      </div>\n    </div>\n    <div class="chat-exporter-footer">\n      已收集 <span id="message-count">${i}</span> 条消息\n    </div>\n  `;const l=c.querySelector(".chat-exporter-close"),d=c.querySelector("#preview-btn"),p=c.querySelector("#export-json-btn"),u=c.querySelector("#export-txt-btn");return l.addEventListener("click",(()=>{c.classList.remove("visible"),function(){const e=document.createElement("button");e.className="restore-btn",e.innerHTML='\n      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M19 9L12 16L5 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n      </svg>\n    ',e.addEventListener("click",(()=>{e.remove(),c.classList.add("visible")})),document.body.appendChild(e)}()})),d.addEventListener("click",(async()=>{const o=document.querySelector('input[name="sort-order"]:checked').value;try{await r(n,t,o)}catch(n){e.error("预览失败:",n),console.error("预览失败:",n)}})),p.addEventListener("click",(async()=>{const r=document.querySelector('input[name="sort-order"]:checked').value;try{await o(n,t,"json",r)}catch(n){e.error("导出JSON失败:",n),console.error("导出JSON失败:",n)}})),u.addEventListener("click",(async()=>{const r=document.querySelector('input[name="sort-order"]:checked').value;try{await o(n,t,"txt",r)}catch(n){e.error("导出TXT失败:",n),console.error("导出TXT失败:",n)}})),document.head.appendChild(s),document.body.appendChild(c),c.classList.add("visible"),{updateMessageCount:e=>{const n=c.querySelector("#message-count");n&&(n.textContent=e)}}}function a(e){e?(e.click(),console.log(`点击元素: ${e.textContent?e.textContent.trim():e.className?e.className:"按钮"}`)):console.error("未找到可点击的元素")}function c(e){return new Promise((n=>setTimeout(n,e)))}async function l(e){console.log("开始选择日期...");const n=new Date,t=n.getFullYear(),o=n.getMonth(),r=n.getDate(),i=e.year,s=e.month-1,l=e.day;if(i>t||i===t&&s>o||i===t&&s===o&&l>r)return console.error(`目标日期 ${i}-${s+1}-${l} 超过当前时间，无法选择。`),!1;const d=document.querySelector("div.record-filter-btn[data-v-35f48dfb]");if(!d)return console.error("无法找到筛选按钮。"),!1;a(d),await c(500);a(document.querySelector("div#ml-root > div:nth-of-type(3) > div > div:nth-of-type(2) > div:nth-of-type(2) > div")),await c(500);let p=!1;for(;;){let e=document.querySelector("div.vc-title span");if(!e){if(p)return console.error("多次尝试后仍然无法找到当前显示的月份和年份。"),!1;{console.log("无法找到当前显示的月份和年份，尝试点击重置按钮...");const n=document.querySelector("span.reset-btn[data-v-846dfd24]");if(!n)return console.error("无法找到重置按钮。"),!1;if(a(n),await c(1e3),e=document.querySelector("div.vc-title span"),p=!0,!e)return console.error("重置后仍然无法找到当前显示的月份和年份。"),!1;console.log("重置成功，重新找到月份和年份。")}}const n=e.textContent.trim(),[t,o]=n.split("-").map((e=>e.trim())),r=parseInt(t,10),l=parseInt(o,10)-1;if(r===i&&l===s){console.log(`已导航到目标月份: ${r}-${l+1}`);break}if(r>i||r===i&&l>s){a(document.querySelector("div.vc-arrows-container > div.vc-arrow.is-left")),await c(300)}else{a(document.querySelector("div.vc-arrows-container > div.vc-arrow.is-right")),await c(300)}}const u=document.querySelectorAll("div.vc-weeks div.vc-day");let g=!1;for(const e of u){const n=e.querySelector("span.vc-day-content");if(n){const t=n.textContent.trim();if(parseInt(t,10)===l){if(g=!0,n.classList.contains("is-disabled"))return console.log(`目标日期 ${i}-${s+1}-${l} 没有数据。`),!1;if(!e.classList.contains("is-not-in-month"))return a(n),console.log(`选择日期: ${i}-${s+1}-${l}`),!0}}}return g||console.error(`未找到目标日期: ${i}-${s+1}-${l}`),!1}async function d(){console.log("开始处理最新消息...");if(document.querySelector("div.message-filter[data-v-846dfd24]")){console.log("检测到筛选条件已打开，尝试关闭...");const e=document.querySelector("div.record-filter-btn[data-v-35f48dfb]");e?(a(e),await c(500)):console.warn("无法找到筛选按钮，可能无法关闭筛选条件。")}else console.log("筛选条件未打开。");const e=document.querySelectorAll("div.msg-list[data-v-33692f9a]");if(e.length>0){const t=e[e.length-1].querySelector("div.record-msg-detail[data-v-33692f9a]");if(t){console.log("找到最新的消息。");const e=t.querySelector("i.q-svg-icon.target-to-chat[data-v-357b03a8][data-v-33692f9a]");return e?((n=e)?(n.style.display="block",n.style.visibility="visible",n.style.opacity="1",n.click(),console.log(`强制显示并点击元素: ${n.className}`)):console.error("未找到需要强制显示和点击的元素"),!0):(console.warn("在最新的消息中未找到目标图标。"),!1)}return console.warn("未找到最新的消息详情。"),!1}return console.warn("未找到任何消息列表。"),!1;var n}const p="2.0.0";window.QCEPro={VERSION:p,init:async function(){try{"complete"!==document.readyState&&await new Promise((e=>window.addEventListener("load",e,{once:!0})));const a="#ml-root",c=".ml-item",u=document.querySelector(a);if(!u)return void e.error("未找到聊天容器，请确保你已打开聊天窗口");if(console.log(`%c QQ Chat Exporter Pro v${p} %c | https://github.com/shuakami/qq-chat-exporter `,"background:#1e90ff;color:#fff;padding:5px 10px;border-radius:4px 0 0 4px;","background:#fff;color:#1e90ff;padding:5px 10px;border-radius:0 4px 4px 0;border:1px solid #1e90ff;"),!window.getSelection)return void e.error("当前环境不支持Selection API，请检查浏览器设置");e.startSection("初始化配置"),e.info("加载日期选择器...");const g=await function(){const e=document.createElement("div");e.className="date-picker-container",e.innerHTML=`\n    <div class="date-picker-overlay"></div>\n    <div class="date-picker-modal">\n      <div class="date-picker-header">\n        <h3>选择导出起始日期</h3>\n        <button class="date-picker-close" aria-label="关闭">\n          <svg width="15" height="15" viewBox="0 0 15 15" fill="none">\n            <path d="M1.5 1.5l12 12m-12 0l12-12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>\n          </svg>\n        </button>\n      </div>\n      <div class="date-picker-body">\n        <div class="date-picker-inputs">\n          <div class="date-input-group">\n            <input type="number" id="year" min="2010" max="${(new Date).getFullYear()}" value="${(new Date).getFullYear()}">\n            <label for="year">年</label>\n          </div>\n          <div class="date-input-group">\n            <input type="number" id="month" min="1" max="12" value="${(new Date).getMonth()+1}">\n            <label for="month">月</label>\n          </div>\n          <div class="date-input-group">\n            <input type="number" id="day" min="1" max="31" value="${(new Date).getDate()}">\n            <label for="day">日</label>\n          </div>\n        </div>\n      </div>\n      <div class="date-picker-footer">\n        <button class="date-picker-btn secondary" id="skip-btn">跳过选择</button>\n        <div class="button-group">\n          <button class="date-picker-btn" id="cancel-btn">取消</button>\n          <button class="date-picker-btn primary" id="confirm-btn">确认</button>\n        </div>\n      </div>\n    </div>\n  `;const n=document.createElement("style");return n.textContent="\n    .date-picker-container {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 10000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n    }\n\n    .date-picker-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n      backdrop-filter: blur(4px);\n      -webkit-backdrop-filter: blur(4px);\n    }\n\n    .date-picker-modal {\n      position: relative;\n      background: white;\n      border-radius: 16px;\n      width: 90%;\n      max-width: 400px;\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n      z-index: 10001;\n      animation: modalAppear 0.2s ease-out;\n    }\n\n    @keyframes modalAppear {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n\n    .date-picker-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 20px 24px;\n    }\n\n    .date-picker-header h3 {\n      margin: 0;\n      font-size: 18px;\n      font-weight: 600;\n      color: #000;\n    }\n\n    .date-picker-close {\n      padding: 8px;\n      border: none;\n      background: none;\n      cursor: pointer;\n      color: #666;\n      border-radius: 8px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s;\n    }\n\n    .date-picker-close:hover {\n      background: #f5f5f5;\n      color: #000;\n    }\n\n    .date-picker-body {\n      padding: 0 24px 24px;\n    }\n\n    .date-picker-inputs {\n      display: flex;\n      gap: 12px;\n    }\n\n    .date-input-group {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .date-input-group input {\n      width: 100%;\n      padding: 12px;\n      border: 1px solid #e5e7eb;\n      border-radius: 8px;\n      font-size: 16px;\n      outline: none;\n      transition: all 0.2s;\n      -moz-appearance: textfield;\n    }\n\n    .date-input-group input::-webkit-outer-spin-button,\n    .date-input-group input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    .date-input-group input:focus {\n      border-color: #1e90ff;\n      box-shadow: 0 0 0 3px rgba(30, 144, 255, 0.1);\n    }\n\n    .date-input-group label {\n      margin-top: 6px;\n      font-size: 13px;\n      color: #666;\n      text-align: center;\n    }\n\n    .date-picker-footer {\n      padding: 16px 24px;\n      border-top: 1px solid #f0f0f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .button-group {\n      display: flex;\n      gap: 8px;\n    }\n\n    .date-picker-btn {\n      padding: 8px 16px;\n      border: none;\n      border-radius: 8px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s;\n      background: #fff;\n      color: #666;\n    }\n\n    .date-picker-btn:hover {\n      background: #f5f5f5;\n    }\n\n    .date-picker-btn.primary {\n      background: #1e90ff;\n      color: white;\n    }\n\n    .date-picker-btn.primary:hover {\n      background: #1a7ee6;\n    }\n\n    .date-picker-btn.secondary {\n      color: #666;\n    }\n\n    .date-picker-btn.secondary:hover {\n      background: #f5f5f5;\n      color: #000;\n    }\n  ",document.head.appendChild(n),document.body.appendChild(e),new Promise((n=>{document.getElementById("cancel-btn").addEventListener("click",(()=>{document.body.removeChild(e),n(null)})),document.querySelector(".date-picker-close").addEventListener("click",(()=>{document.body.removeChild(e),n(null)})),document.getElementById("skip-btn").addEventListener("click",(()=>{document.body.removeChild(e),n(!1)})),document.getElementById("confirm-btn").addEventListener("click",(()=>{const t=parseInt(document.getElementById("year").value,10),o=parseInt(document.getElementById("month").value,10),r=parseInt(document.getElementById("day").value,10),i=new Date;if(t>i.getFullYear()||t===i.getFullYear()&&o>i.getMonth()+1||t===i.getFullYear()&&o===i.getMonth()+1&&r>i.getDate())return void alert("所选日期不能超过当前日期");const s=new Date(t,o-1,r);s.getFullYear()===t&&s.getMonth()===o-1&&s.getDate()===r?(document.body.removeChild(e),n({year:t,month:o,day:r})):alert("所选日期无效，请检查日期是否存在")}))}))}();if(g){e.highlight(`用户选择了日期: ${g.year}-${g.month}-${g.day}`);if(await l(g)){e.success("日期选择成功！");await d()?(e.success("已成功导航到选定的聊天记录位置！"),await n(1e3)):(e.warning("处理消息失败，可能无法跳转到选定的聊天记录位置。即将继续导出当前可见消息。"),await n(2e3))}else e.error("日期选择失败，可能是该日期没有聊天记录。即将使用当前日期继续。"),await n(2e3)}else!1===g?e.system("用户选择跳过日期选择，将从当前日期开始导出。"):e.warning("用户取消了操作，但我们仍将继续导出当前可见的聊天记录。");e.info("选择滚动方向...");const h=await new Promise((e=>{const n=document.createElement("div");n.style.cssText="\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          border-radius: 16px;\n          padding: 24px;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n          z-index: 999999;\n          width: 480px;\n          font-family: system-ui, -apple-system, sans-serif;\n        ";const t=document.createElement("h2");t.textContent="选择滚动方向",t.style.cssText="\n          margin: 0 0 20px 0;\n          font-size: 18px;\n          font-weight: 600;\n          color: #1e90ff;\n        ";const o=document.createElement("p");o.textContent="请选择聊天记录的滚动方向：",o.style.cssText="\n          margin: 0 0 20px 0;\n          color: #666;\n          font-size: 14px;\n        ";const r=document.createElement("div");r.style.cssText="\n          display: flex;\n          gap: 16px;\n          margin-bottom: 16px;\n        ";const i=(t,o,r)=>{const i=document.createElement("button");i.style.cssText="\n            flex: 1;\n            padding: 16px;\n            border: 1px solid #e0e0e0;\n            border-radius: 12px;\n            background: white;\n            cursor: pointer;\n            transition: all 0.2s;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 12px;\n            color: #666;\n            min-height: 120px;\n          ";const s=document.createElement("span");s.textContent="up"===o?"⬆️":"⬇️",s.style.cssText="\n            font-size: 28px;\n            margin-bottom: 4px;\n          ";const a=document.createElement("span");a.textContent=t,a.style.cssText="\n            font-size: 16px;\n            font-weight: 500;\n            margin-bottom: 8px;\n          ";const c=document.createElement("span");return c.textContent=r,c.style.cssText="\n            font-size: 13px;\n            color: #888;\n            text-align: center;\n            line-height: 1.4;\n          ",i.appendChild(s),i.appendChild(a),i.appendChild(c),i.addEventListener("mouseover",(()=>{i.style.borderColor="#1e90ff",i.style.color="#1e90ff",i.style.transform="translateY(-2px)",c.style.color="#1e90ff"})),i.addEventListener("mouseout",(()=>{i.style.borderColor="#e0e0e0",i.style.color="#666",i.style.transform="translateY(0)",c.style.color="#888"})),i.addEventListener("click",(()=>{n.remove(),e(o)})),i},s=i("向上滚动","up","选择此方向，我们会往上获取聊天记录"),a=i("向下滚动","down","选择此方向，我们会往下获取聊天记录");r.appendChild(s),r.appendChild(a);const c=document.createElement("p");c.textContent="提示：选择与你平时浏览消息记录的方向相反",c.style.cssText="\n          margin: 0;\n          color: #999;\n          font-size: 13px;\n          text-align: center;\n          line-height: 1.5;\n        ",n.appendChild(t),n.appendChild(o),n.appendChild(r),n.appendChild(c),document.body.appendChild(n)}));e.success(`用户选择了${"up"===h?"向上":"向下"}滚动`);const b=Date.now()+"-"+Math.random().toString(36).substr(2,9);let x;e.system(`当前记录 ID: ${b}`),window.Dexie||(e.info("正在从国内CDN加载 Dexie.js..."),await new Promise(((n,t)=>{const o=document.createElement("script");o.src="https://cdn.bootcdn.net/ajax/libs/dexie/3.2.2/dexie.min.js",o.onload=n,o.onerror=r=>{e.error("Dexie.js 加载失败，尝试使用备用CDN..."),o.src="https://cdn.jsdelivr.net/npm/dexie@3.2.2/dist/dexie.min.js",o.onload=n,o.onerror=t},document.head.appendChild(o)})).catch((n=>{throw e.error("所有CDN加载失败，请检查网络连接"),new Error("依赖加载失败: "+n)})),e.success("Dexie.js 已成功加载"));try{const I="ChatRecords_"+b;x=new Dexie(I),x.version(1).stores({records:"++id, session, timestamp, time, sender, content"}),await x.open(),e.system(`已初始化数据库: ${I}`)}catch(q){throw e.error(`数据库初始化失败: ${q.message}`),new Error("数据库初始化失败")}window.collectedMessages=[],window.processedIds=new Set;const f="up"===h?5:1,m="up"===h?1:10,w=e=>"down"===e?{scrollDelay:300,focusInterval:100,scrollDuration:1800}:{scrollDelay:900,focusInterval:300,scrollDuration:2400},y=20,v=50;let k=0,C=!1,$=!1,E=0,S=0;window.stopAutoScroll=function(){C=!0,e.highlight("已手动停止自动滚动")},window.exportChatRecords=async(n,t)=>{try{if(!x)throw new Error("数据库未初始化");if(!b)throw new Error("记录ID未初始化");return await o(x,b,n,t)}catch(n){throw e.error(`导出失败: ${n.message}`),console.error("导出失败:",n),n}},window.previewChatRecords=async n=>{try{if(!x)throw new Error("数据库未初始化");if(!b)throw new Error("记录ID未初始化");return await r(x,b,n)}catch(n){throw e.error(`预览失败: ${n.message}`),console.error("预览失败:",n),n}},window.QCEPro.exportChatRecords=window.exportChatRecords,window.QCEPro.previewChatRecords=window.previewChatRecords,window.howToExport=i,window.datePickerUtils={selectSpecificDate:l,processLatestChatMessage:d,delay:n},window.addEventListener("keydown",(function(n){n.ctrlKey&&"F8"===n.key&&(n.preventDefault(),$=!$,$?e.warning("已暂停自动滚动 (Ctrl+F8 可恢复)"):e.success("已恢复自动滚动"))}),!1);const T=document.querySelectorAll(c).length;e.count(`开始自动滚动, 初始消息数: ${T}`),e.system(`容器高度: ${u.clientHeight}px, 初始滚动位置: ${u.scrollTop}px`),e.endSection("初始化配置"),e.startSection("开始滚动采集");e:for(;!C;){for(;$&&!C;)e.system("运行已暂停...等待恢复 (Ctrl+F8)"),await n(1e3);for(let L=0;L<f;L++)if(await j("up"))break e;for(let M=0;M<m;M++)if(await j("down"))break e}e.endSection("滚动采集"),e.success(`共收集消息数: ${window.collectedMessages.length}条`);try{if(!await s(x,b,window.collectedMessages.length))throw new Error("导出工具UI创建失败")}catch(z){throw e.error(`创建导出工具失败: ${z.message}`),z}async function j(o){E++;const r=u.scrollTop,i=w(o);e.event(`[滚动] 第${E}次, 方向=${o}, 方法=${S}`),u.focus(),await n(i.focusInterval),await t(u,o,S,i.scrollDuration),await n(i.scrollDelay);const s=u.scrollTop,a=Math.abs(s-r);a<v?(S=(S+1)%5,e.warning(`滚动无效 (差异: ${a}px)，切换到方法 ${S}`),await t(u,o,S,i.scrollDuration),await n(i.scrollDelay)):e.system(`滚动成功，位移: ${a}px，方向: ${o}`);const c=D();if(c>0){const n=window.collectedMessages.slice(-c);n.forEach((e=>{e.session=b,e.timestamp=(new Date).toISOString()}));try{await x.records.bulkAdd(n),e.success(`已存储 ${c} 条新增消息到数据库`)}catch(n){e.error(`存储消息到数据库失败: ${n.message}`)}k=0}else if(k++,e.system(`无新消息，已连续 ${k}/${y} 次`),k>=y)return e.warning(`已达到最大无消息次数 (${y})，停止滚动`),!0;return!1}function D(){let n=0;const t=document.querySelectorAll(c);for(const o of t){const t=o.getAttribute("id")||"";if(!t||window.processedIds.has(t))continue;const r=o.querySelector(".message__timestamp .babble"),i=r?r.innerText.trim():"",s=o.querySelector(".avatar-span"),a=s&&s.getAttribute("aria-label")||"";let c="";const l=o.querySelector(".text-element");if(l&&""!==l.innerText.trim())c=l.innerText.trim();else{const e=o.querySelector("img.image-content");if(e){let n=e.getAttribute("src")||"",t=e.getAttribute("data-path")||"";n.startsWith("data:")&&(n=n.slice(0,50)+"...");const r=o.querySelector(".msg-preview--video");if(r){const e=r.getAttribute("finalsrc")||"",o=r.getAttribute("aria-label")||"视频";c=e?`[${o}] 路径: ${e}`:`[${o}] 预览: ${t||n}`}else c="[图片] "+(t?"路径: "+t:"预览: "+n)}if(!c){const e=o.querySelector(".msg-preview--video");if(e){const n=e.getAttribute("finalsrc")||"",t=e.querySelector("img.image-content");let o="";t&&(o=t.getAttribute("data-path")||t.getAttribute("src")||""),c="[视频] "+(n?"路径: "+n:o?"预览: "+o:"未知视频文件")}}}c||(c=o.textContent.trim()?`[未识别消息] ${o.textContent.trim().substring(0,100)}${o.textContent.trim().length>100?"...":""}`:"[未识别消息类型]");const d={id:t,time:i,sender:a,content:c};window.collectedMessages.push(d),window.processedIds.add(t),n++,n%5!=0&&1!==n||e.count(`已获取 ${window.collectedMessages.length} 条消息`)}return n}i(),function(){const e={title:"font-size: 14px; color: #3498db;",kaomoji:"font-size: 14px; color: #3498db;",text:"font-size: 13px; color: #3498db;",link:"font-size: 13px; color: #3498db; text-decoration: underline;"};console.log("%c QWQ...你喜欢这个工具吗？",e.title),console.log("%c(｡･ω･｡)ﾉ♡ 如果对你有帮助的话～给个小星星吧～",e.kaomoji),console.log("%c→ %chttps://github.com/shuakami/qq-chat-exporter",e.text,e.link),console.log("%c(´。＿。｀) 有问题或建议的话，也请到 issue 区留言哦～",e.kaomoji),console.log("%c熬夜开发不易，感谢你的支持和反馈！(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",e.text)}(),e.highlight("如果你要重新执行脚本/切换好友继续进行备份，请一定要先点击F5刷新后继续。")}catch(P){console.error("初始化失败:",P)}},showExportHelp:i,exportChatRecords:o,previewChatRecords:r},window.QCEPro.init().catch((e=>{console.error("初始化失败:",e)}))}();
