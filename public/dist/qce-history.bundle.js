!function(){"use strict";const n={styles:{info:"color: #3498db; font-weight: normal;",success:"color: #2ecc71; font-weight: bold;",warning:"color: #f39c12; font-weight: bold;",error:"color: #e74c3c; font-weight: bold;",highlight:"color: #9b59b6; font-weight: bold;",system:"color: #7f8c8d; font-style: italic;",event:"color: #1abc9c; font-weight: normal;",count:"color: #f1c40f; font-weight: bold;"},info:(e,...t)=>console.log(`%c[INFO] ${e}`,n.styles.info,...t),success:(e,...t)=>console.log(`%c[SUCCESS] ${e}`,n.styles.success,...t),warning:(e,...t)=>console.log(`%c[WARNING] ${e}`,n.styles.warning,...t),error:(e,...t)=>console.error(`%c[ERROR] ${e}`,n.styles.error,...t),highlight:(e,...t)=>console.log(`%c[IMPORTANT] ${e}`,n.styles.highlight,...t),system:(e,...t)=>console.log(`%c[SYSTEM] ${e}`,n.styles.system,...t),event:(e,...t)=>console.log(`%c[EVENT] ${e}`,n.styles.event,...t),count:(e,...t)=>console.log(`%c[COUNT] ${e}`,n.styles.count,...t),startSection:n=>{console.log(`\n%c========== ${n} ==========`,"color: #3498db; background: #f8f9fa; font-size: 14px; font-weight: bold; padding: 4px 8px; border-radius: 4px;")},endSection:n=>{console.log(`%c========== ${n} 结束 ==========\n`,"color: #7f8c8d; background: #f8f9fa; font-size: 12px; padding: 2px 8px; border-radius: 4px;")},divider:()=>console.log("%c----------------------------------------","color: #bdc3c7;")};async function e(e,t,o="json",r="asc"){"string"!=typeof o&&(o="json",n.warning("未指定正确的格式参数，已默认使用JSON格式")),"json"!==(o=o.toLowerCase().trim())&&"txt"!==o&&(o="json",n.warning('格式参数只支持"json"或"txt"，已默认使用JSON格式')),"string"!=typeof r?(r="asc",n.warning("未指定正确的排序参数，已默认使用时间正序")):"asc"!==(r=r.toLowerCase().trim())&&"desc"!==r&&(r="asc",n.warning('排序参数只支持"asc"或"desc"，已默认使用时间正序')),n.highlight(`开始导出聊天记录 [${o.toUpperCase()}格式, ${"asc"===r?"时间正序":"时间倒序"}]`);const s=new Blob(['\n  onmessage = function(e) {\n    const {records, format, sortOrder} = e.data;\n    \n    // 根据排序参数对记录进行排序\n    records.sort((a, b) => {\n      if (sortOrder === \'asc\') {\n        return a.id - b.id; // 正序：ID小的在前(较早的消息)\n      } else {\n        return b.id - a.id; // 倒序：ID大的在前(较新的消息)\n      }\n    });\n    \n    let result = "";\n    if(format === \'json\'){\n      result = JSON.stringify(records, null, 2);\n    } else if(format === \'txt\'){\n      result = records.map(rec => rec.id + "\\t" + rec.time + "\\t" + rec.sender + "\\t" + rec.content).join("\\n");\n    }\n    postMessage(result);\n  };\n'],{type:"application/javascript"}),i=new Worker(URL.createObjectURL(s));return new Promise(((s,a)=>{i.onmessage=function(e){const t=e.data;n.success(`导出完成 (${o.toUpperCase()}格式)`);const i=(new Date).toISOString().slice(0,10),a=document.createElement("a"),c=new Blob([t],{type:"text/plain;charset=utf-8"});a.href=URL.createObjectURL(c),a.download=`chat_records_${i}_${r}.${o}`,a.click(),n.info(`文件 chat_records_${i}_${r}.${o} 已保存到下载文件夹`),s()},e.records.where("session").equals(t).toArray().then((e=>{if(0===e.length)return n.error("没有找到可导出的聊天记录！请确保已正确获取聊天内容"),void a(new Error("没有找到可导出的聊天记录"));n.system(`正在处理 ${e.length} 条记录...`),i.postMessage({records:e,format:o,sortOrder:r})})).catch((e=>{n.error(`读取数据库失败: ${e.message}`),n.warning("如果您刚刚运行了脚本，请等待自动滚动完成后再导出"),a(e)}))}))}async function t(e,t,o="asc"){o="string"==typeof o&&"desc"===o.toLowerCase()?"desc":"asc",n.highlight(`正在获取聊天记录预览 (${"asc"===o?"时间正序":"时间倒序"})`);try{const r=await e.records.where("session").equals(t).toArray();if(0===r.length)return void n.error("没有找到可预览的聊天记录！");r.sort(((n,e)=>"asc"===o?n.id-e.id:e.id-n.id)),console.table(r.slice(0,20).map((n=>({id:n.id,time:n.time,sender:n.sender,content:n.content.length>50?n.content.substring(0,50)+"...":n.content})))),n.success(`共有 ${r.length} 条记录，上表显示前20条`),n.system("当前排序: "+("asc"===o?"时间正序 (ID小→大，较早→较新)":"时间倒序 (ID大→小，较新→较早)"))}catch(e){n.error(`预览失败: ${e.message}`)}}async function o(){const n=document.createElement("style");n.textContent="\n    .history-manager {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 90%;\n      max-width: 800px;\n      max-height: 90vh;\n      background: rgba(255, 255, 255, 0.98);\n      border-radius: 16px;\n      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);\n      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n      z-index: 10000;\n      overflow: hidden;\n      border: 1px solid rgba(0, 0, 0, 0.06);\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      animation: fadeIn 0.3s ease-out;\n      display: none;\n    }\n\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translate(-50%, -48%);\n      }\n      to {\n        opacity: 1;\n        transform: translate(-50%, -50%);\n      }\n    }\n\n    .history-manager.visible {\n      display: block;\n    }\n\n    .history-manager-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n      backdrop-filter: blur(4px);\n      -webkit-backdrop-filter: blur(4px);\n      z-index: 9999;\n      animation: fadeIn 0.3s ease-out;\n      display: none;\n    }\n\n    .history-manager-overlay.visible {\n      display: block;\n    }\n\n    .history-manager-header {\n      padding: 20px 24px;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .history-manager-title {\n      font-size: 18px;\n      font-weight: 600;\n      color: #000;\n      margin: 0;\n      display: flex;\n      align-items: center;\n      gap: 12px;\n    }\n\n    .history-manager-close {\n      padding: 8px;\n      margin: -8px;\n      cursor: pointer;\n      opacity: 0.6;\n      transition: all 0.2s;\n      border: none;\n      background: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 8px;\n    }\n\n    .history-manager-close:hover {\n      opacity: 1;\n      background: rgba(0, 0, 0, 0.05);\n    }\n\n    .history-manager-body {\n      padding: 20px 24px;\n      overflow-y: auto;\n      max-height: calc(90vh - 140px);\n    }\n\n    .history-manager-empty {\n      text-align: center;\n      padding: 40px 0;\n      color: #666;\n      font-size: 14px;\n    }\n\n    .history-list {\n      display: grid;\n      gap: 12px;\n      grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n    }\n\n    .history-item {\n      background: rgba(0, 0, 0, 0.02);\n      border: 1px solid rgba(0, 0, 0, 0.04);\n      border-radius: 12px;\n      padding: 16px;\n      transition: all 0.2s;\n    }\n\n    .history-item:hover {\n      background: rgba(0, 0, 0, 0.03);\n      transform: translateY(-1px);\n    }\n\n    .history-item-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n      margin-bottom: 12px;\n    }\n\n    .history-item-title {\n      font-size: 15px;\n      font-weight: 500;\n      color: #000;\n      margin: 0;\n    }\n\n    .history-item-time {\n      font-size: 12px;\n      color: #666;\n    }\n\n    .history-item-info {\n      font-size: 13px;\n      color: #666;\n      margin: 8px 0;\n    }\n\n    .history-item-actions {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: 8px;\n      margin-top: 12px;\n    }\n\n    .history-item-btn {\n      padding: 8px;\n      border: none;\n      border-radius: 8px;\n      font-size: 13px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.03);\n      color: #333;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 6px;\n    }\n\n    .history-item-btn:hover {\n      background: rgba(0, 0, 0, 0.06);\n    }\n\n    .history-item-btn.primary {\n      background: #1e90ff;\n      color: white;\n    }\n\n    .history-item-btn.primary:hover {\n      background: #1a7ee6;\n    }\n\n    .history-item-btn svg {\n      width: 14px;\n      height: 14px;\n      opacity: 0.8;\n    }\n\n    .history-manager-footer {\n      padding: 16px 24px;\n      border-top: 1px solid rgba(0, 0, 0, 0.08);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.01);\n    }\n\n    .history-manager-stats {\n      font-size: 13px;\n      color: #666;\n    }\n\n    .history-manager-actions {\n      display: flex;\n      gap: 8px;\n    }\n\n    .history-manager-btn {\n      padding: 8px 16px;\n      border: none;\n      border-radius: 8px;\n      font-size: 13px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s;\n      background: rgba(0, 0, 0, 0.03);\n      color: #333;\n    }\n\n    .history-manager-btn:hover {\n      background: rgba(0, 0, 0, 0.06);\n    }\n\n    .history-manager-btn.danger {\n      background: #ff4d4f;\n      color: white;\n    }\n\n    .history-manager-btn.danger:hover {\n      background: #ff3333;\n    }\n  ",document.head.appendChild(n);const o=document.createElement("div");o.className="history-manager-overlay",document.body.appendChild(o);const r=document.createElement("div");r.className="history-manager",r.innerHTML='\n    <div class="history-manager-header">\n      <h3 class="history-manager-title">\n        历史记录管理\n      </h3>\n      <button class="history-manager-close" aria-label="关闭">\n        <svg width="15" height="15" viewBox="0 0 15 15" fill="none">\n          <path d="M1.5 1.5l12 12m-12 0l12-12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>\n        </svg>\n      </button>\n    </div>\n    <div class="history-manager-body">\n      <div class="history-list"></div>\n      <div class="history-manager-empty">正在加载历史记录...</div>\n    </div>\n    <div class="history-manager-footer">\n      <div class="history-manager-stats"></div>\n      <div class="history-manager-actions">\n        <button class="history-manager-btn danger" id="clearHistoryBtn">清空所有记录</button>\n      </div>\n    </div>\n  ',document.body.appendChild(r);async function s(){const n=r.querySelector(".history-list"),o=r.querySelector(".history-manager-empty"),i=r.querySelector(".history-manager-stats");try{const r=(await window.indexedDB.databases()).filter((n=>n.name.startsWith("ChatRecords_")));if(0===r.length)return o.textContent="暂无历史记录",void(i.textContent="共 0 条历史记录");o.style.display="none",n.innerHTML="";let a=0;for(const o of r){const r=new Dexie(o.name);r.version(1).stores({records:"++id, session, timestamp, time, sender, content"}),await r.open();const s=await r.table("records").toArray();if(0===s.length)continue;s[0].session;const i=new Date(s[0].timestamp),c=[...new Set(s.map((n=>n.sender)))].filter(Boolean),l=document.createElement("div");l.className="history-item",l.innerHTML=`\n          <div class="history-item-header">\n            <h4 class="history-item-title">${c.join(", ")||"未知对话"}</h4>\n            <span class="history-item-time">${i.toLocaleString()}</span>\n          </div>\n          <div class="history-item-info">\n            共 ${s.length} 条消息\n          </div>\n          <div class="history-item-actions">\n            <button class="history-item-btn primary" data-action="json" data-db="${o.name}">\n              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                <path d="M20 12V4H4v16h16v-8M16 2v4M8 2v4M4 8h16"/>\n              </svg>\n              JSON\n            </button>\n            <button class="history-item-btn" data-action="txt" data-db="${o.name}">\n              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>\n                <path d="M14 2v6h6M8 13h8M8 17h8M8 9h2"/>\n              </svg>\n              TXT\n            </button>\n            <button class="history-item-btn" data-action="preview" data-db="${o.name}">\n              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>\n                <circle cx="12" cy="12" r="3"/>\n              </svg>\n              预览\n            </button>\n          </div>\n        `;l.querySelectorAll(".history-item-btn").forEach((n=>{n.addEventListener("click",(async()=>{const o=n.dataset.action,r=n.dataset.db,i=new Dexie(r);i.version(1).stores({records:"++id, session, timestamp, time, sender, content"}),await i.open();const a=s[0].session;switch(o){case"json":await e(i,a,"json","asc");break;case"txt":await e(i,a,"txt","asc");break;case"preview":await t(i,a,"asc")}}))})),n.appendChild(l),a+=s.length}i.textContent=`共 ${r.length} 条历史记录，${a} 条消息`;document.getElementById("clearHistoryBtn").addEventListener("click",(async()=>{if(confirm("确定要清空所有历史记录吗？此操作不可恢复！")){for(const n of r)await Dexie.delete(n.name);s()}}))}catch(n){console.error("加载历史记录失败:",n),o.textContent="加载历史记录失败"}}return r.querySelector(".history-manager-close").addEventListener("click",(()=>{r.classList.remove("visible"),o.classList.remove("visible")})),{show:function(){r.classList.add("visible"),o.classList.add("visible"),s()}}}let r=null;async function s(){if(!window.Dexie)try{await new Promise(((n,e)=>{const t=document.createElement("script");t.src="https://cdn.bootcdn.net/ajax/libs/dexie/3.2.2/dexie.min.js",t.onload=n,t.onerror=e,document.head.appendChild(t)})),console.log("Dexie.js 已成功加载")}catch(n){return void console.error("加载 Dexie.js 失败:",n)}r||(r=await o()),r.show()}window.QCEHistory={show:s},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{s().catch((n=>{console.error("历史管理器初始化失败:",n)}))})):s().catch((n=>{console.error("历史管理器初始化失败:",n)}))}();
